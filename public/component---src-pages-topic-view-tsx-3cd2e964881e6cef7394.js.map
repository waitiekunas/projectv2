{"version":3,"sources":["webpack:///./src/components/BuyPoster.tsx","webpack:///./src/containers/TopicDescription.tsx","webpack:///./src/pages/topic-view.tsx"],"names":["BuyPoster","props","translation","translations","buttons","className","additionalClass","src","imageUri","alt","showText","imgHeader","imgText","Button","handleClick","e","preventDefault","alert","classButtonDiv","buttonTexts","label","language","classButton","Wrapper","styled","div","ContentArea","TextArea","p","AuthorInfoArea","AuthorPhotoArea","AuthorDescriptionArea","connect","state","isLoggedIn","authorPhoto","topicInfo","authorDesc","photo","authorDescription","description","topicDesc","TopicView","location","title","classInfo"],"mappings":"+MA+BeA,EA3BG,SAACC,GACf,IACMC,EAAcC,EAAaC,QAKjC,OACI,yBAAKC,UAAcJ,EAAMK,gBAAX,aACV,yBAAKC,IAAKN,EAAMO,SAAUC,IAAK,gBAC9BR,EAAMS,UACH,yBAAKL,UAAU,4DACX,wBAAIA,UAAW,QAASJ,EAAMU,WAC9B,2BAAIV,EAAMW,SACV,kBAACC,EAAA,EAAD,CACIC,YAZA,SAACC,GACjBA,EAAEC,iBACFC,MAAM,4DAWUC,eAAgB,WAChBC,YAAajB,EACbkB,MAAO,aACPC,SAAUpB,EAAMoB,SAChBC,YAnBD,8KCSjBC,EAAUC,IAAOC,IAAV,gFAAGD,CAAH,0CAIPE,EAAcF,IAAOC,IAAV,oFAAGD,CAAH,gBAGXG,EAAWH,IAAOI,EAAV,iFAAGJ,CAAH,qCAKRK,EAAiBL,IAAOC,IAAV,uFAAGD,CAAH,gFAOdM,EAAkBN,IAAOC,IAAV,wFAAGD,CAAH,6BAIfO,EAAwBP,IAAOC,IAAV,8FAAGD,CAAH,6BA8DZQ,qBAJS,SAAAC,GAAK,MAAK,CAC9BC,WAAYD,EAAMC,WAAWA,WAC7Bb,SAAUY,EAAMZ,SAASA,YAEdW,EAxDU,SAAC/B,GACtB,IACMC,EAAcC,EAAaC,QAK3B+B,EAAclC,EAAMmC,UAAYnC,EAAMmC,UAAUC,WAAWC,MAAQ,KACnEC,EAAoBtC,EAAMmC,UAAYnC,EAAMmC,UAAUC,WAAWG,YAAc,KAC/EC,EAAYxC,EAAMmC,UAAYnC,EAAMmC,UAAUI,YAAc,KAClE,OACI,6BACI,kBAACjB,EAAD,KACI,kBAACG,EAAD,KACKzB,EAAMiC,WACH,KACE,kBAAC,EAAD,CACE5B,gBAAiB,GACjBE,SAAU,+BACVE,UAAU,EACVC,UAAW,aACXC,QAAS,SACjB,kBAACiB,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CACIxB,gBAAiB,GACjBE,SAAU2B,EACVzB,UAAU,KAElB,kBAACqB,EAAD,KAAwBQ,IAE5B,kBAACZ,EAAD,KAAWc,GACX,kBAAClB,EAAD,KACI,kBAACV,EAAA,EAAD,CACIC,YA/BJ,SAACC,GACjBA,EAAEC,iBACFC,MAAM,mBA8BcC,eAAgB,2BAChBC,YAAajB,EACbkB,MAAO,aACPC,SAAUpB,EAAMoB,SAChBC,YAtCL,kLCxBRoB,UAZG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,eACX,kBAAC,IAAD,CACEpC,SAAU,+BACVE,UAAU,EACVJ,gBAAiB,uBACnB,kBAAC,EAAD,CACE8B,UAAWO,EAASV,OAASU,EAASV,MAAMY","file":"component---src-pages-topic-view-tsx-3cd2e964881e6cef7394.js","sourcesContent":["import React from 'react';\r\nimport Button from '../components/Button'\r\nimport translations from '../resources/translations/translations.json';\r\n\r\nconst BuyPoster = (props: any) => {\r\n    const btnClasses = 'button-navbar-padding navbar-btn bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white border border-blue-500 hover:border-transparent rounded'\r\n    const translation = translations.buttons\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        alert(\"Buy! should appear register or login info or buy window\")\r\n    }\r\n    return (\r\n        <div className={`${props.additionalClass} relative`}>\r\n            <img src={props.imageUri} alt={'description'} />\r\n            {props.showText &&\r\n                <div className=\"image-text-block flex justify-center flex-col opacity-50\">\r\n                    <h4 className={'pt-4'}>{props.imgHeader}</h4>\r\n                    <p>{props.imgText}</p>\r\n                    <Button\r\n                        handleClick={handleClick}\r\n                        classButtonDiv={'flex-col'}\r\n                        buttonTexts={translation}\r\n                        label={'starLesson'}\r\n                        language={props.language}\r\n                        classButton={btnClasses}\r\n                    />\r\n                </div>}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default BuyPoster;","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport Image from '../components/Image copy';\r\nimport Button from '../components/Button';\r\nimport BuyPoster from '../components/BuyPoster'\r\nimport translations from '../resources/translations/translations.json';\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n`\r\nconst ContentArea = styled.div`\r\nwidth: 80%;\r\n`\r\nconst TextArea = styled.p`\r\ntext-align: center;\r\npadding: 1rem;\r\n`\r\n\r\nconst AuthorInfoArea = styled.div`\r\ndisplay: flex;\r\npadding: 1rem;\r\n@media (max-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\nconst AuthorPhotoArea = styled.div`\r\nwidth: 25%;\r\npadding: 1rem;\r\n`\r\nconst AuthorDescriptionArea = styled.div`\r\nwidth: 70%;\r\npadding: 1rem;\r\n`\r\n\r\n\r\nconst TopicDescription = (props: any) => {\r\n    const btnClasses = 'button-navbar-padding navbar-btn bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white border border-blue-500 hover:border-transparent rounded'\r\n    const translation = translations.buttons\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        alert(\"Lesson started\")\r\n    }\r\n    const authorPhoto = props.topicInfo ? props.topicInfo.authorDesc.photo : null;\r\n    const authorDescription = props.topicInfo ? props.topicInfo.authorDesc.description : null;\r\n    const topicDesc = props.topicInfo ? props.topicInfo.description : null;\r\n    return (\r\n        <div>\r\n            <Wrapper>\r\n                <ContentArea>\r\n                    {props.isLoggedIn ?\r\n                        null\r\n                        : <BuyPoster\r\n                            additionalClass={''}\r\n                            imageUri={\"/images/wide-index-photo.jpg\"}\r\n                            showText={true}\r\n                            imgHeader={\"dont have?\"}\r\n                            imgText={\"Buy!\"} />}\r\n                    <AuthorInfoArea>\r\n                        <AuthorPhotoArea>\r\n                            <Image\r\n                                additionalClass={''}\r\n                                imageUri={authorPhoto}\r\n                                showText={false} />\r\n                        </AuthorPhotoArea>\r\n                        <AuthorDescriptionArea>{authorDescription}</AuthorDescriptionArea>\r\n                    </AuthorInfoArea>\r\n                    <TextArea>{topicDesc}</TextArea>\r\n                    <Wrapper>\r\n                        <Button\r\n                            handleClick={handleClick}\r\n                            classButtonDiv={'flex-col navbar-btn-cont'}\r\n                            buttonTexts={translation}\r\n                            label={'starLesson'}\r\n                            language={props.language}\r\n                            classButton={btnClasses} />\r\n                    </Wrapper>\r\n                </ContentArea>\r\n            </Wrapper>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTopicDescription.propTypes = {\r\n    isLoggedIn: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.isLoggedIn.isLoggedIn,\r\n    language: state.language.language\r\n});\r\nexport default connect(mapStateToProps)(TopicDescription)\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Image from \"../components/Image copy\"\r\nimport TopicDescription from \"../containers/TopicDescription\"\r\n\r\nconst TopicView = ({ location }) => (\r\n  <Layout>\r\n    <SEO title=\"Topic-view\" />\r\n    <Image\r\n      imageUri={\"/images/wide-index-photo.jpg\"}\r\n      showText={false}\r\n      additionalClass={'max-height-40-proc'} />\r\n    <TopicDescription\r\n      topicInfo={location.state && location.state.classInfo} />\r\n  </Layout>\r\n)\r\n\r\nexport default TopicView\r\n"],"sourceRoot":""}