{"version":3,"sources":["webpack:///./src/containers/TopicDescription.tsx","webpack:///./src/pages/topic-view.tsx"],"names":["Wrapper","styled","div","ContentArea","TextArea","p","AuthorInfoArea","AuthorPhotoArea","AuthorDescriptionArea","connect","state","isLoggedIn","language","props","translation","translations","buttons","additionalClass","imageUri","topicInfo","authorDesc","photo","showText","description","Button","handleClick","e","preventDefault","alert","classButtonDiv","buttonTexts","label","classButton","TopicView","location","title","classInfo"],"mappings":"+MAaMA,EAAUC,IAAOC,IAAV,gFAAGD,CAAH,0CAIPE,EAAcF,IAAOC,IAAV,oFAAGD,CAAH,gBAGXG,EAAWH,IAAOI,EAAV,iFAAGJ,CAAH,qCAKRK,EAAiBL,IAAOC,IAAV,uFAAGD,CAAH,gFAOdM,EAAkBN,IAAOC,IAAV,wFAAGD,CAAH,6BAIfO,EAAwBP,IAAOC,IAAV,8FAAGD,CAAH,6BAoDZQ,qBAJS,SAAAC,GAAK,MAAK,CAC9BC,WAAYD,EAAMC,WAAWA,WAC7BC,SAAUF,EAAME,SAASA,YAEdH,EA9CU,SAACI,GACtB,IACMC,EAAcC,EAAaC,QAKjC,OACI,6BACI,kBAAChB,EAAD,KACI,kBAACG,EAAD,KACKU,EAAMF,WAAa,wCAAqB,KACzC,kBAACL,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CACIU,gBAAiB,GACjBC,SAAUL,EAAMM,UAAUC,WAAWC,MACrCC,UAAU,KAElB,kBAACd,EAAD,KAAwBK,EAAMM,UAAUC,WAAWG,cAEvD,kBAACnB,EAAD,KAAWS,EAAMM,UAAUI,aAC3B,kBAACvB,EAAD,KACI,kBAACwB,EAAA,EAAD,CACIC,YArBJ,SAACC,GACjBA,EAAEC,iBACFC,MAAM,mBAoBcC,eAAgB,2BAChBC,YAAahB,EACbiB,MAAO,aACPnB,SAAUC,EAAMD,SAChBoB,YA5BL,kLCvBRC,UAZG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,eACX,kBAAC,IAAD,CACEjB,SAAU,+BACVI,UAAU,EACVL,gBAAiB,uBACnB,kBAAC,EAAD,CACEE,UAAWe,EAASxB,OAASwB,EAASxB,MAAM0B","file":"component---src-pages-topic-view-tsx-22bdc2514f2c43086ed4.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport Image from '../components/Image copy';\r\nimport Button from '../components/Button';\r\nimport translations from '../resources/translations/translations.json';\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n`\r\nconst ContentArea = styled.div`\r\nwidth: 80%;\r\n`\r\nconst TextArea = styled.p`\r\ntext-align: center;\r\npadding: 1rem;\r\n`\r\n\r\nconst AuthorInfoArea = styled.div`\r\ndisplay: flex;\r\npadding: 1rem;\r\n@media (max-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\nconst AuthorPhotoArea = styled.div`\r\nwidth: 25%;\r\npadding: 1rem;\r\n`\r\nconst AuthorDescriptionArea = styled.div`\r\nwidth: 70%;\r\npadding: 1rem;\r\n`\r\n\r\n\r\nconst TopicDescription = (props: any) => {\r\n    const btnClasses = 'button-navbar-padding navbar-btn bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white border border-blue-500 hover:border-transparent rounded'\r\n    const translation = translations.buttons\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        alert(\"Lesson started\")\r\n    }\r\n    return (\r\n        <div>\r\n            <Wrapper>\r\n                <ContentArea>\r\n                    {props.isLoggedIn ? <div>CONTENT</div> : null}\r\n                    <AuthorInfoArea>\r\n                        <AuthorPhotoArea>\r\n                            <Image\r\n                                additionalClass={''}\r\n                                imageUri={props.topicInfo.authorDesc.photo}\r\n                                showText={false} />\r\n                        </AuthorPhotoArea>\r\n                        <AuthorDescriptionArea>{props.topicInfo.authorDesc.description}</AuthorDescriptionArea>\r\n                    </AuthorInfoArea>\r\n                    <TextArea>{props.topicInfo.description}</TextArea>\r\n                    <Wrapper>\r\n                        <Button\r\n                            handleClick={handleClick}\r\n                            classButtonDiv={'flex-col navbar-btn-cont'}\r\n                            buttonTexts={translation}\r\n                            label={'starLesson'}\r\n                            language={props.language}\r\n                            classButton={btnClasses} />\r\n                    </Wrapper>\r\n                </ContentArea>\r\n            </Wrapper>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTopicDescription.propTypes = {\r\n    isLoggedIn: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.isLoggedIn.isLoggedIn,\r\n    language: state.language.language\r\n});\r\nexport default connect(mapStateToProps)(TopicDescription)\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Image from \"../components/Image copy\"\r\nimport TopicDescription from \"../containers/TopicDescription\"\r\n\r\nconst TopicView = ({ location }) => (\r\n  <Layout>\r\n    <SEO title=\"Topic-view\" />\r\n    <Image\r\n      imageUri={\"/images/wide-index-photo.jpg\"}\r\n      showText={false}\r\n      additionalClass={'max-height-40-proc'} />\r\n    <TopicDescription\r\n      topicInfo={location.state && location.state.classInfo} />\r\n  </Layout>\r\n)\r\n\r\nexport default TopicView\r\n"],"sourceRoot":""}